=begin
#Strava API v3

#Strava API

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for StravaClient::ClubsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ClubsApi' do
  before do
    # run before each test
    @instance = StravaClient::ClubsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ClubsApi' do
    it 'should create an instance of ClubsApi' do
      expect(@instance).to be_instance_of(StravaClient::ClubsApi)
    end
  end

  # unit tests for get_club_activities_by_id
  # List Club Activities
  # Retrieve recent activities from members of a specific club. The authenticated athlete must belong to the requested club in order to hit this endpoint. Pagination is supported. Enhanced Privacy Mode is respected for all activities.
  # @param id The identifier of the club.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of items per page. Defaults to 30.
  # @return [Array<SummaryActivity>]
  describe 'get_club_activities_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_club_admins_by_id
  # List Club Administrators.
  # Returns a list of the administrators of a given club.
  # @param id The identifier of the club.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of items per page. Defaults to 30.
  # @return [Array<SummaryAthlete>]
  describe 'get_club_admins_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_club_by_id
  # Get Club
  # Returns a given club using its identifier.
  # @param id The identifier of the club.
  # @param [Hash] opts the optional parameters
  # @return [DetailedClub]
  describe 'get_club_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_club_members_by_id
  # List Club Members
  # Returns a list of the athletes who are members of a given club.
  # @param id The identifier of the club.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of items per page. Defaults to 30.
  # @return [Array<SummaryAthlete>]
  describe 'get_club_members_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_logged_in_athlete_clubs
  # List Athlete Clubs
  # Returns a list of the clubs whose membership includes the authenticated athlete.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :per_page Number of items per page. Defaults to 30.
  # @return [Array<SummaryClub>]
  describe 'get_logged_in_athlete_clubs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for join_club_by_id
  # Join Club
  # Adds the authenticated athlete to the club&#39;s membership.
  # @param id The identifier of the club.
  # @param [Hash] opts the optional parameters
  # @return [MembershipApplication]
  describe 'join_club_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for leave_club_by_id
  # Leave Club
  # Removes the authenticated athlete from the club&#39;s membership.
  # @param id The identifier of the club.
  # @param [Hash] opts the optional parameters
  # @return [MembershipApplication]
  describe 'leave_club_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
