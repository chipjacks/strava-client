=begin
#Strava API v3

#The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for StravaClient::UploadsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UploadsApi' do
  before do
    # run before each test
    @instance = StravaClient::UploadsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UploadsApi' do
    it 'should create an instance of UploadsApi' do
      expect(@instance).to be_instance_of(StravaClient::UploadsApi)
    end
  end

  # unit tests for create_upload
  # Upload Activity
  # Uploads a new data file to create an activity from. Requires activity:write scope.
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file The uploaded file.
  # @option opts [String] :name The desired name of the resulting activity.
  # @option opts [String] :description The desired description of the resulting activity.
  # @option opts [String] :trainer Whether the resulting activity should be marked as having been performed on a trainer.
  # @option opts [String] :commute Whether the resulting activity should be tagged as a commute.
  # @option opts [String] :data_type The format of the uploaded file.
  # @option opts [String] :external_id The desired external identifier of the resulting activity.
  # @return [Upload]
  describe 'create_upload test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_upload_by_id
  # Get Upload
  # Returns an upload for a given identifier. Requires activity:write scope.
  # @param upload_id The identifier of the upload.
  # @param [Hash] opts the optional parameters
  # @return [Upload]
  describe 'get_upload_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
